qq.lognormreg<-function(data, lognorm.fit, xlab = "standard log-lognorm\nquantiles", ylab = "ordered log data", pch = NULL, lty = NULL, col = NULL)
{
## Purpose: qqplot for lognormal regression with one covariate which has a finite number 
##          of distinct values which can be coverted into levels. It draws lines with same 
##          slope sigma, but different intercepts, whose values are the MLE's
##-------------------------------------------------------------------
## Arguments: ##  data  A Surv object, or a list of such objects
##            ##  lognorm.fit is a survReg object with dist="lognormal"    
##-------------------------------------------------------------------
## Author: Mara Tableman, Date: 2 December, 2002
	on.exit(browser())
	t.c <- class(data)
	if((!is.null(t.c)) && t.c == "Surv")
		data <- list(data)
	t.k <- length(data)
	if(is.null(pch))
		pch <- 1:t.k
	if(is.null(lty))
		lty <- 1:t.k
	if(is.null(col))
		col <- 1 + 1:t.k
	t.sf <- lapply(data, function(s)
	{
		t.s <- summary(survfit(s, type = "kaplan-meier"))
		t.ss <- t.s$surv
		t.s$surv <- (t.ss + c(1, t.ss[ - length(t.ss)]))/2
		t.s
	}
	)
	t.rgs <- range(sapply(t.sf, function(s)
	range(s$surv)))
	t.rgt <- range(sapply(t.sf, function(s)
	range(s$time)))
	plot(qnorm(1 - t.rgs), log(t.rgt), type = "n", ylim = c(5.5, max(log(t.rgt))), xlab = xlab, ylab
		 = ylab)
	for(t.g in 1:t.k) {
		points(qnorm(1 - t.sf[[t.g]]$surv), log(t.sf[[t.g]]$time), pch = pch[t.g], col = 1)
		mutilde <- as.numeric(levels(factor(lognorm.fit$linear.predictors)))
		scale <- rep(lognorm.fit$scale, length(mutilde))
		abline(mutilde[t.g], scale[t.g], lty = lty[t.g], col = 1)
	}
	on.exit()
	"qq.lognormreg:done"
}

